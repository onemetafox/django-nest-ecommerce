# Generated by Django 3.2 on 2022-04-18 10:52

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ecommerce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(default='', max_length=250)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('is_active', models.BooleanField(default=True)),
                ('show_in_menu_list', models.BooleanField(default=False)),
                ('is_favorite', models.BooleanField(default=False)),
                ('makito_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('pfconcept_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('sticker_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('pfconcept_name', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('cifra_name', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('rolly_name', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('jhk_name', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategory', to='ecommerce.category')),
            ],
            options={
                'db_table': 'ecommerce_category',
                'ordering': ['category_name'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(default='', max_length=250)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('description', models.TextField(default=None, null=True)),
                ('color_code', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('sticker_color', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('pfconcept_color', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('jhk_color', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('roly_color', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('makito_color', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ecommerce_color',
                'ordering': ['color_name'],
            },
        ),
        migrations.CreateModel(
            name='EngravingTechnique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=250)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('code_makito', models.CharField(blank=True, max_length=150, null=True)),
                ('code_pfconcept', models.CharField(blank=True, max_length=150, null=True)),
                ('max_color', models.IntegerField(default=1)),
                ('included_color', models.IntegerField(default=1)),
                ('minimum_work', models.DecimalField(decimal_places=2, default=20.0, max_digits=10, null=True)),
                ('minimum_price_per_unit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('low_order_price', models.BooleanField(default=False)),
                ('cm2', models.BooleanField(default=False)),
                ('select_color', models.BooleanField(default=True)),
                ('color1_1', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_10', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_50', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_100', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_250', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_500', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_1000', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_2000', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color1_5000', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_1', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_10', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_50', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_100', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_250', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_500', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_1000', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_2000', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('color2_5000', models.DecimalField(decimal_places=2, default=1.0, max_digits=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ecommerce_engraving_technique',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='', max_length=250)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('product_description', models.TextField(default=None)),
                ('product_description_additional', models.TextField(blank=True, default=None, null=True)),
                ('product_image_url', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('thumbnail', models.ImageField(blank=True, max_length=500, null=True, upload_to=ecommerce.models.get_product_thumbnail_upload_path)),
                ('provider', models.CharField(blank=True, default='publiexpe', max_length=250, null=True)),
                ('repeated_position', models.IntegerField(default=0, null=True)),
                ('accept_order_when_out_of_stock', models.BooleanField(default=False)),
                ('max_reserve_quantity', models.IntegerField(default=50)),
                ('root_reference', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('show_color_to_order', models.BooleanField(default=False)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('depth', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('combined_measured', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('box_units', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('sell_per_box', models.BooleanField(default=False)),
                ('minimum_order', models.IntegerField(default=1)),
                ('pallet_box', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('pallet_units', models.IntegerField(blank=True, default=0, null=True)),
                ('pallet_weight', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('box_weight', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('box_dimension', models.CharField(blank=True, default='', max_length=75, null=True)),
                ('material', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('total_visit', models.IntegerField(blank=True, default=0, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('link_360', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('link_video1', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('link_video2', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('outlet', models.BooleanField(default=False)),
                ('is_new', models.BooleanField(default=True)),
                ('is_most_sold', models.BooleanField(default=False)),
                ('liquidation', models.BooleanField(default=False)),
                ('settlement_position', models.CharField(choices=[('LEFT_UP', 'LEFT_UP'), ('LEFT_DOWN', 'LEFT_DOWN'), ('RIGHT_UP', 'RIGHT_UP'), ('RIGHT_DOWN', 'RIGHT_DOWN')], default='LEFT_UP', max_length=10)),
                ('liquidation_text', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('liquidation_background_color', models.CharField(blank=True, default='#000000', max_length=8, null=True)),
                ('liquidation_text_color', models.CharField(blank=True, default='#FFFFFF', max_length=8, null=True)),
                ('is_seal_activated', models.BooleanField(default=False)),
                ('is_discount_allowed', models.BooleanField(default=False)),
                ('protect_image', models.BooleanField(default=False)),
                ('datasheet', models.FileField(blank=True, null=True, upload_to=ecommerce.models.get_product_datasheet_upload_path)),
                ('imported_json_data', models.JSONField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=500, null=True), blank=True, default=list, size=10)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belongs_to_category', to='ecommerce.category')),
                ('sub_category', models.ManyToManyField(blank=True, related_name='subcategories', to='ecommerce.Category')),
            ],
            options={
                'db_table': 'ecommerce_product',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_name', models.CharField(default='', max_length=250)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('stricker_size', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('makito_size', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ecommerce_size',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_name', models.CharField(default='', max_length=250)),
                ('reference', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('stock', models.IntegerField(default=0)),
                ('available_from', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, max_length=500, null=True, upload_to=ecommerce.models.get_product_thumbnail_upload_path)),
                ('original_img_url', models.CharField(blank=True, default=None, max_length=350, null=True)),
                ('allow_backorder', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belongs_to_color', to='ecommerce.color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant', to='ecommerce.product')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belongs_to_size', to='ecommerce.size')),
            ],
            options={
                'db_table': 'ecommerce_product_variant',
                'ordering': ['reference'],
            },
        ),
        migrations.CreateModel(
            name='ProductTopSeller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_top_seller', to='ecommerce.product')),
            ],
            options={
                'db_table': 'product_top_seller',
                'ordering': ['-sales', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductSeo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=150)),
                ('meta_description', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('key_words', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=500, null=True), blank=True, default=list, size=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belongs_to', to='ecommerce.product')),
            ],
            options={
                'db_table': 'ecommerce_product_seo',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='EngravingTechniqueColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=250)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('n_colors', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engraving_technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belongs_to_engraving_technique', to='ecommerce.engravingtechnique')),
            ],
            options={
                'db_table': 'ecommerce_engraving_technique_color',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EngravingArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=250)),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=250)),
                ('code_makito', models.CharField(blank=True, max_length=150, null=True)),
                ('code_pfconcept', models.CharField(blank=True, max_length=150, null=True)),
                ('width', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('height', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('diameter', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('image', models.FileField(blank=True, null=True, upload_to=ecommerce.models.get_engraved_area_image_upload_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('is_modified', models.BooleanField(default=False)),
                ('is_deprecated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engraving_technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engraving_technique_engraved_area', to='ecommerce.engravingtechnique')),
                ('product', models.ManyToManyField(blank=True, to='ecommerce.Product')),
            ],
            options={
                'db_table': 'ecommerce_engraved_area',
                'ordering': ['-slug'],
            },
        ),
    ]
